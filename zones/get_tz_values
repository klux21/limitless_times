#!/bin/sh

# (c) 2024 Dipl.-Ing. Klaus Lux (Aachen, Germany)
# 
# This script is nothing but a first hack for extracting a list of the TZ values of the different
# locations from the time zone database of a Linux or BSD system. 

echo \
'/* ========================================================================= *\
 * DO NOT EDIT! This header file is generated by the script get_tz_values!   *
 * ------------------------------------------------------------------------- *
 *                ---  This file is in the public domain.  ---               *
\* ========================================================================= */

#ifndef _TZ_VALUE_H
#define _TZ_VALUE_H

#include <stddef.h> /* for size_t */

#ifdef __cplusplus
extern "C" {
#endif

typedef struct TZ_VALUE_S TZ_VALUE;
struct  TZ_VALUE_S
{
   const char * name; /* name of the location or time zone */
   const char * tz;   /* TZ value for the location or time zone */
};

extern TZ_VALUE timezones[]; /* NULL terminated array of TZ values */
extern size_t num_timezones; /* numbers of timezones in the array */

/* ------------------------------------------------------------------------- *\
   pc_find_TZ searches a location or a time zone name in the timezone array
   and returns either a pointer to the related TZ value or NULL if the name
   was not found in that array.
\* ------------------------------------------------------------------------- */
const char * pc_find_TZ(const char * name); 

#ifdef __cplusplus
}/* extern "C" */
#endif

#endif /* _TZ_VALUE_H */

/* ========================================================================= *\
 * END OF FILE                                                               *
\* ========================================================================= */'   > tz_value.h

##################################################################################

echo \
'/* ========================================================================= *\
 * DO NOT EDIT! This file is generated by the script get_tz_values!          *
 * ------------------------------------------------------------------------- *
 *                ---  This file is in the public domain.  ---               *
\* ========================================================================= */

#include <string.h>
#include <tz_value.h>

TZ_VALUE timezones[] = {'\
 > tz_value.c



if [ -z "${ZONEINFO}" ]
then
    ZONEINFO=/usr/share/zoneinfo
fi

if [ -d ${ZONEINFO}/posix ]
then
    for zl in $( find "${ZONEINFO}/posix" -name '*' )
    do
        if [ -f "${zl}" ]
        then
            z=${zl#*/posix*/}
            echo "      {\"${z}\", \"$(tail -1 < ${zl} )\" },"
        fi
    done
fi | sort >> tz_value.c


echo '      { NULL, NULL }}; /* termination of array */

/* ------------------------------------------------------------------------- *\
   num_timezones contains the number of timezones
\* ------------------------------------------------------------------------- */
size_t num_timezones = sizeof(timezones) / sizeof(timezones[0]) - 1;

/* ------------------------------------------------------------------------- *\
   pc_find_TZ searches a location or a time zone name in the timezone array
   and returns either a pointer to the related TZ value or NULL if the name
   was not found in that array.
\* ------------------------------------------------------------------------- */
const char * pc_find_TZ(const char * name)
{
   const char * ptz = NULL;
   TZ_VALUE *   ptv = timezones;
   size_t       count = num_timezones; 
   
   while(count--)
   {
      if (!strcmp(ptv->name, name))
      {
         ptz = ptv->tz;
         goto Exit;
      }

      ++ptv;
   }

   /* check wether a city or zone name was specified without the region prefix */
   ptv   = timezones;
   count = num_timezones;

   while(count--)
   {
      const char * pn = strchr(ptv->name, '"'/'"');
      while(pn)
      {
         if (!strcmp(pn + 1, name))
         {
            ptz = ptv->tz;
            goto Exit;
         }
         pn = strchr(pn + 1, '"'/'"');
      }

      ++ptv;
   }

   Exit:;
   return (ptz);
} /* const char * pc_find_TZ(...) */

/* ========================================================================= *\
 * END OF FILE                                                               *
\* ========================================================================= */'\
 >> tz_value.c

##################################################################################

echo 'tz_value.h and tz_value.c should have been created or updated now!'
